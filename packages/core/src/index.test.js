/* eslint-disable import/no-unresolved, import/no-extraneous-dependencies */

jest.mock('@emdaer/plugin-foo', () => async () => 'Hello, World', {
  virtual: true,
});

jest.mock(
  '@emdaer/transform-bar',
  () => async content => content.replace('Hello, World', 'Hello, World!'),
  {
    virtual: true,
  }
);

jest.mock('./EmdaerFeatureFlags');

const emdaer = require('./');
const EmdaerFeatureFlags = require('./EmdaerFeatureFlags');

describe('@emdaer/core', () => {
  it('processes an .emdaer.md file', async () => {
    EmdaerFeatureFlags.enableASTParsing = false;
    EmdaerFeatureFlags.enableCommonComment = false;
    expect(
      await emdaer(
        './.emdaer/README.emdaer.md',
        `# <!--emdaer-p
  - '@emdaer/plugin-foo'
  - a: 0
    b: 1
    c: 2
-->

<!--emdaer-t
  - '@emdaer/transform-bar'
-->
`
      )
    ).toBe(`<!--
  This file was generated by emdaer

  Its template can be found at ./.emdaer/README.emdaer.md
-->

# Hello, World!


`);
  });
  it('processes an .emdaer.md file without a stamp', async () => {
    EmdaerFeatureFlags.enableASTParsing = false;
    EmdaerFeatureFlags.enableCommonComment = false;
    expect(
      await emdaer(
        './.emdaer/README.emdaer.md',
        `# <!--emdaer-p
  - '@emdaer/plugin-foo'
  - a: 0
    b: 1
    c: 2
-->

<!--emdaer-t
  - '@emdaer/transform-bar'
-->
`,
        false
      )
    ).toBe(`# Hello, World!


`);
  });
  describe('AST', () => {
    it('processes an .emdaer.md file', async () => {
      EmdaerFeatureFlags.enableASTParsing = true;
      EmdaerFeatureFlags.enableCommonComment = false;
      expect(
        await emdaer(
          './.emdaer/README.emdaer.md',
          `# <!--emdaer-p
  - '@emdaer/plugin-foo'
  - a: 0
    b: 1
    c: 2
-->

<!--emdaer-t
  - '@emdaer/transform-bar'
-->
`
        )
      ).toBe(`<!--
  This file was generated by emdaer

  Its template can be found at ./.emdaer/README.emdaer.md
-->

# Hello, World!


`);
    });
    it('processes an .emdaer.md file without a stamp', async () => {
      EmdaerFeatureFlags.enableASTParsing = true;
      EmdaerFeatureFlags.enableCommonComment = false;
      expect(
        await emdaer(
          './.emdaer/README.emdaer.md',
          `# <!--emdaer-p
  - '@emdaer/plugin-foo'
  - a: 0
    b: 1
    c: 2
-->

<!--emdaer-t
  - '@emdaer/transform-bar'
-->
`,
          false
        )
      ).toBe(`# Hello, World!


`);
    });
  });
});
